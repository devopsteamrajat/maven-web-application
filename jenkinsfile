def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
node {

    echo "Job Name is: ${env.JOB_NAME}"
echo "Node name is:  ${env.NODE_NAME}"


    def mavenHome = tool name: 'maven3.8.4'
 try { 
 //Get the code from Github Repo
      sendSlackNotifications('STARTED')
     stage('checkoutCode'){
git branch: 'development', credentialsId: '6d25a656-3e13-4ddf-936c-0018bb39927b', url:
 'https://github.com/devopsteamrajat/maven-web-application.git'
}
//Do the build by using maven build tool
    stage('build'){
sh "${mavenHome}/bin/mvn clean package"
}
//execute the sonarQube report
/*   stage('Execute SonarQubeReport'){
sh  "${mavenHome}/bin/mvn sonar:sonar"
}
//Upload Artifacts into Artifacory reposi
stage('Execute nexus'){
sh  "${mavenHome}/bin/mvn deploy"
}
//deploy Application into Tomcat server
stage ('DeployApplicationIntoTomcatServer') {
sshagent(['23b23583-43cf-421d-a5e3-d545e2daa7e1']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.111.157.162:/opt/apache-tomcat-9.0.62/webapps"

}
} */
}//try closing 
catch(e)
{currentBuild.result = "FAILED"
}
finally {
sendSlackNotifications(currentBuild.result)
}
}
